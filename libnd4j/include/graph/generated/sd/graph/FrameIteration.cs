// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace sd.graph
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct FrameIteration : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static FrameIteration GetRootAsFrameIteration(ByteBuffer _bb) { return GetRootAsFrameIteration(_bb, new FrameIteration()); }
  public static FrameIteration GetRootAsFrameIteration(ByteBuffer _bb, FrameIteration obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FrameIteration __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Frame { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFrameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetFrameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetFrameArray() { return __p.__vector_as_array<byte>(4); }
  public ushort Iteration { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<sd.graph.FrameIteration> CreateFrameIteration(FlatBufferBuilder builder,
      StringOffset frameOffset = default(StringOffset),
      ushort iteration = 0) {
    builder.StartTable(2);
    FrameIteration.AddFrame(builder, frameOffset);
    FrameIteration.AddIteration(builder, iteration);
    return FrameIteration.EndFrameIteration(builder);
  }

  public static void StartFrameIteration(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFrame(FlatBufferBuilder builder, StringOffset frameOffset) { builder.AddOffset(0, frameOffset.Value, 0); }
  public static void AddIteration(FlatBufferBuilder builder, ushort iteration) { builder.AddUshort(1, iteration, 0); }
  public static Offset<sd.graph.FrameIteration> EndFrameIteration(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<sd.graph.FrameIteration>(o);
  }
};


}
